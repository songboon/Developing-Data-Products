MTCars Pitch Presentation
========================================================
author: Song Boon
date: 25 April 2015

What this deck of slide is about
========================================================

This is my first presentation slide on mtcars for this course.

- This is a very basic exploration of the dataset mtcars
- I used it to explore mtcars by transmission type, gears and cylinders.

Location of the Code and Shiny App
========================================================
The code is found on GitHub:
https://github.com/songboon/Developing-Data-Products

The shinyapps is found here: 
https://shtsb.shinyapps.io/m9w3test/


The server.R code
========================================================
```{r}
library(shiny)

# Load the ggplot2 package which provides
# the mtcars dataset.
library(ggplot2)

# Define a server for the Shiny app
shinyServer(function(input, output) {
  
  # Filter data based on selections
  output$table <- renderDataTable({
    ##data <- mpg
    data <- mtcars
    if (input$gear != "All"){
      data <- data[data$gear == input$gear,]
    }
    if (input$cyl != "All"){
      data <- data[data$cyl == input$cyl,]
    }
    if (input$trans != "All"){
      data <- data[data$am == input$trans,]
    }
    data
  })
  
})
```

The ui.R code
========================================================
```{r}
# Define the overall UI
shinyUI(
  fluidPage(
    titlePanel("Very Basic Data Table Exploration"),
    
    # Create a new Row in the UI for selectInputs
    fluidRow(
      column(4, 
             selectInput("gear", 
                         "Gear:", 
                         c("All", 
                           unique(as.character(mtcars$gear))))
      ),
      column(4, 
             selectInput("trans", 
                         "Transmission Type:", 
                         c("All", 
                           unique(as.character(mtcars$am))))
      ),
      column(4, 
             selectInput("cyl", 
                         "Cylinders:", 
                         c("All", 
                           unique(as.character(mtcars$cyl))))
      )        
    ),
    # Create a new row for the table.
    fluidRow(
      dataTableOutput(outputId="table")
    )    
  )  
)
```
